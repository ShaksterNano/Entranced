plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

loom {
    forge {
        mixinConfig "entranced-common.mixins.json"
        mixinConfig "entranced-forge.mixins.json"
    }
}

archivesBaseName = "${rootProject.archives_base_name}-forge-mc${rootProject.minecraft_version}"

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon.extendsFrom // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge("net.minecraftforge:forge:${rootProject.forge_version}")
    modApi("dev.architectury:architectury-forge:${rootProject.architectury_api_version}")

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    modApi("me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}")

    forgeRuntimeLibrary("com.github.LlamaLad7:MixinExtras:${rootProject.mixin_extras_version}") {
        transitive = false
    }

    modRuntimeOnly("curse.maven:enchantment-descriptions-250419:${rootProject.enchantment_descriptions_forge_id}")

    modRuntimeOnly("mezz.jei:jei-${rootProject.minecraft_version}:${rootProject.jei_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"

    relocate("com.llamalad7.mixinextras", "${rootProject.maven_group}.relocated.mixinextras")
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
